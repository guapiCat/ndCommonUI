import{_ as o,o as c,c as e,a as d}from"./app-df2347b2.js";const r={},a=d('<br><h4 id="文件说明" tabindex="-1"><a class="header-anchor" href="#文件说明" aria-hidden="true">#</a> 文件说明</h4><ul><li>我们在<code>package/APP</code>文件夹下放置了一个<code>common.scss</code>文件。它用于定制主题样式。</li><li>common.scc只包含两个部分： <ol><li>定义的各种公共scss变量，如颜色<code>$nd-primary-color: #1780E3;</code>，边距等。</li><li>vant主题配置修改，它定义在<code>:root:root{ }</code>里。头部放置变量，这些变量应该包含规范的颜色和边距，内容放置对vant主题的修改如<code>--van-sidebar-selected-background: var(--nd-primary-color);</code>，可修改的主题配置见vant文档。 <br></li></ol></li></ul><h4 id="如何进行开发" tabindex="-1"><a class="header-anchor" href="#如何进行开发" aria-hidden="true">#</a> 如何进行开发</h4><ul><li>在组件中引入公共的<code>common.scss</code>文件，如果有可用的变量就直接用，如果没有需要在<code>common.scss</code>文件加入新的变量。</li><li><code>common.scss</code>文件里存放的是公共变量，和主题配置。不要将组件内部的样式放进来</li><li>尽量在组件内部少用样式透传直接修改样式，首先查看是否有可配置的主题，没有的话再进行修改，边距和颜色以<code>common.scss</code>内的规范变量为准。 <br></li></ul><h4 id="一些问题" tabindex="-1"><a class="header-anchor" href="#一些问题" aria-hidden="true">#</a> 一些问题</h4><ul><li>问：为什么<code>:root:root{ }</code>不能用<code>$nd-primary-color</code>变量，而是再重命名一遍 答：<code>:root:root{ }</code>属于vant约定的解析方式，读取不了<code>$nd-primary-color</code></li><li>问：为什么不将scss中的变量和<code>:root:root{ }</code>拆开 答：目前暂不拆开。想尽量避免多文件引用，目前只引用一个文件相对方便。后续会做引用的优化</li></ul>',7),s=[a];function i(l,t){return c(),e("div",null,s)}const h=o(r,[["render",i],["__file","APP端CSS主题定制规范.html.vue"]]);export{h as default};
