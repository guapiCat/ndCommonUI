import{_ as a,r as n,o as r,c as s,d as l,e as i,b as t,a as c}from"./app-df2347b2.js";const d={},h=c('<h4 id="组件库项目模块划分" tabindex="-1"><a class="header-anchor" href="#组件库项目模块划分" aria-hidden="true">#</a> 组件库项目模块划分</h4><ul><li>src/packages：组件开发目录</li><li>src/style: 样式依赖，基础样式，主题样式</li><li>src/directives: 指令</li><li>src/locale: 多语言配置</li><li>src/utils: 工具集</li><li>docs/**MD: docs文档</li><li>docs/.vuepress/components: 测试组件</li></ul><h4 id="新建组件规则" tabindex="-1"><a class="header-anchor" href="#新建组件规则" aria-hidden="true">#</a> 新建组件规则</h4><ul><li>在src/packages的PC或APP文件夹下创建组件文件夹</li><li>组件文件夹包含index.js文件（未来存放单个组件打包配置），包含src目录存放组件内容</li><li>组件内部功能尽量在组件文件夹下实现，尽量不要依赖外部引用</li><li>修改或添加公共资源应告知</li></ul><h4 id="组件写法命名" tabindex="-1"><a class="header-anchor" href="#组件写法命名" aria-hidden="true">#</a> 组件写法命名</h4><ul><li>组件文件夹命名：nd-button</li><li>组件命名如：nd-button.vue</li><li>样式命名：nd-header</li><li>插件集命名：nd_http.js</li><li>vue内部变量命名：小驼峰</li><li>插件方法命名：大驼峰</li></ul><h4 id="组件开发应遵循的规则" tabindex="-1"><a class="header-anchor" href="#组件开发应遵循的规则" aria-hidden="true">#</a> 组件开发应遵循的规则</h4><ul><li>组件提供出去的接口字段，优先和element、vant保持一致，如果没有则进行扩充</li><li>组件内部尽量使用基本语法实现，少用语法糖。（原因：避免组件库升级语法糖导致的问题）</li><li>组件内部维护自己的样式，图片等资源。公共区域尽量少放东西</li><li>组件之间应降低耦合度。不要用eventbus，vuex等三方工具互相传递数据</li><li>组件内部引用第三方资源需要说明，第三方资源尽量找到源码放在项目内，不要用npm的方式安装</li><li>组件内部的变量、方法加上注释，长逻辑做简言说明</li><li>组件代码的编写要考虑未来的扩展</li></ul><h4 id="组件文档编写应遵循的规则" tabindex="-1"><a class="header-anchor" href="#组件文档编写应遵循的规则" aria-hidden="true">#</a> 组件文档编写应遵循的规则</h4><ul><li>组件开发完成后，在docs/componentMD中编写对应的文档</li><li>组件开发完成后，在docs/.vuepress/components中编写对应的测试文件</li><li>文档需要引用对应的测试文件，需要说明参数配置。参数配置一般包括：属性配置，方法配置</li><li>文档需要说明组件的依赖或引用，包括：其他组件、其他元素、插件、指令、第三方资源</li></ul><h4 id="代码合并规则" tabindex="-1"><a class="header-anchor" href="#代码合并规则" aria-hidden="true">#</a> 代码合并规则</h4><ul><li>项目主干为main。只有管理员有合并权限。合并完成后会打tag作为稳定版本</li><li>演示分支为branch。branch演示审核通过后可申请合并到主干main</li><li>每个开发维护自己的分支。命名：branch_**。在个人分支开发分配的任务</li><li>开发完成后。先在自己分支合并branch。解决冲突后，保证功能正常。然后将自己的分支合并到branch做演示</li></ul><h4 id="组件库使用方式" tabindex="-1"><a class="header-anchor" href="#组件库使用方式" aria-hidden="true">#</a> 组件库使用方式</h4>',13),o=l("li",null,[l("p",null,"直接从组件库复制代码到自己项目内使用")],-1),u=l("li",null,[l("p",null,"对于一个复杂且共用的功能，从组件库拿到示例参考，并加以修改放在项目内使用")],-1),_=l("li",null,[l("p",null,"开启一个新项目。以组件库为模板，拉取代码，删掉不需要的文件。")],-1);function p(b,m){const e=n("nd-button");return r(),s("div",null,[h,l("ul",null,[o,l("li",null,[l("p",null,[i("拿到一个打包好的js资源，一个css资源。在项目中注册组件库，通过"),t(e),i("的方式使用")])]),u,_])])}const x=a(d,[["render",p],["__file","组件库编写规范.html.vue"]]);export{x as default};
